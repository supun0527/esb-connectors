<!--
    ~ Copyright 2005-2014 WSO2, Inc. (http://wso2.com)
    ~
    ~ Licensed under the Apache License, Version 2.0 (the "License");
    ~ you may not use this file except in compliance with the License.
    ~ You may obtain a copy of the License at
    ~
    ~ http://www.apache.org/licenses/LICENSE-2.0
    ~
    ~ Unless required by applicable law or agreed to in writing, software
    ~ distributed under the License is distributed on an "AS IS" BASIS,
    ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ~ See the License for the specific language governing permissions and
    ~ limitations under the License.
    -->
<template xmlns="http://ws.apache.org/ns/synapse" name="createBundle">
    <parameter name="Bundle_title"
               description="optional-the title of the bundle to be created "/>
    <parameter name="Bundle_description"
               description="optional-the description of the bundle"/>
    <parameter name="Bundle_private"
               description="optional-a value true or false designating the privacy setting of the bundle"/>
    <sequence>
        <property name="uri.var.Bundle_title" expression="$func:Bundle_title"/>
        <property name="uri.var.Bundle_description" expression="$func:Bundle_description"/>
        <property name="uri.var.Bundle_private" expression="$func:Bundle_private"/>
        <filter
                xpath="(not(get-property('uri.var.Bundle_description'))) = '' or (not(string(get-property('uri.var.Bundle_description'))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;description=',get-property('uri.var.Bundle_description'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.Bundle_private'))) = '' or (not(string(get-property('uri.var.Bundle_private'))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;private=',get-property('uri.var.Bundle_private'))"/>
            </then>
        </filter>
        <property name="Accept-Encoding" action="remove" scope="transport"/>
        <payloadFactory media-type="xml">
            <format>
                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                    <soapenv:Header/>
                    <soapenv:Body>
                    </soapenv:Body>
                </soapenv:Envelope>
            </format>
            <args/>
        </payloadFactory>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="https://api-ssl.bitly.com/v3/bundle/create?access_token={+uri.var.bitly.accessToken}&amp;title={+uri.var.Bundle_title}&amp;{+uri.var.apiParameters}"/>
            </endpoint>
        </call>
        <property name="messageType" value="application/json" scope="axis2"/>
    </sequence>
</template>

